{"version":3,"sources":["components/Header.js","hooks/fetchData.js","components/Card.js","components/Weather.js","App.js","index.js"],"names":["Header","className","FetchData","useState","lat","setLat","long","setLong","data","setData","useEffect","getCoordinates","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","result","Card","props","attribute","value","idName","id","Weather","console","log","undefined","main","name","temp","feels_like","humidity","weather","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAWeA,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,gD,8BCqBSC,EAzBG,WAChB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAU,WACR,IAAMC,EAAc,uCAAG,sBAAAC,EAAA,6DACrBC,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDX,EAAOW,EAASC,OAAOC,UACvBX,EAAQS,EAASC,OAAOE,cAHL,SAMfC,MAAM,GAAD,OACNC,0CADM,yBACwCjB,EADxC,gBACmDE,EADnD,+BAC8Ee,qCAEtFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhB,EAAQgB,MAXS,2CAAH,qDAcpBd,MACC,CAACP,EAAKE,IACF,CAAEE,SCVIkB,G,YAVF,SAACC,GACZ,IAAQC,EAA6BD,EAA7BC,UAAWC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAC1B,OACE,sBAAK7B,UAAU,OAAO8B,GAAID,EAA1B,UACE,6BAAKF,IACL,6BAAKC,SCsCIG,EA1CC,WACd,IAAQxB,EAASN,IAATM,KAER,OADAyB,QAAQC,IAAI1B,QACM2B,IAAd3B,EAAK4B,KAEL,eAAC,WAAD,WACE,qBAAKnC,UAAU,OAAf,SACE,uCAAQO,EAAK6B,UAEf,sBAAKpC,UAAU,mBAAf,UACE,cAAC,EAAD,CACE2B,UAAU,cACVC,MAAK,UAAKrB,EAAK4B,KAAKE,KAAf,SACLR,OAAO,gBAET,cAAC,EAAD,CACEF,UAAU,aACVC,MAAK,UAAKrB,EAAK4B,KAAKG,WAAf,SACLT,OAAO,eAET,cAAC,EAAD,CACEF,UAAU,WACVC,MAAK,UAAKrB,EAAK4B,KAAKI,SAAf,KACLV,OAAO,aAET,cAAC,EAAD,CACEF,UAAU,cACVC,MAAK,UAAKrB,EAAKiC,QAAQ,GAAGL,MAC1BN,OAAO,sBAOb,8BACE,oDC5BOY,EATH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd53641a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>WeatherGram</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst FetchData = () => {\r\n  const [lat, setLat] = useState([]);\r\n  const [long, setLong] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCoordinates = async () => {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setLat(position.coords.latitude);\r\n        setLong(position.coords.longitude);\r\n      });\r\n\r\n      await fetch(\r\n        `${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setData(result);\r\n        });\r\n    };\r\n    getCoordinates();\r\n  }, [lat, long]);\r\n  return { data };\r\n};\r\n\r\nexport default FetchData;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport \"../svgs/weather_description.svg\";\r\n\r\nconst Card = (props) => {\r\n  const { attribute, value, idName } = props;\r\n  return (\r\n    <div className=\"card\" id={idName}>\r\n      <h3>{attribute}</h3>\r\n      <h4>{value}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport FetchData from \"../hooks/fetchData\";\r\nimport \"./Weather.css\";\r\nimport Card from \"./Card\";\r\n\r\nconst Weather = () => {\r\n  const { data } = FetchData();\r\n  console.log(data);\r\n  if (data.main !== undefined) {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"city\">\r\n          <h3>{`${data.name}`}</h3>\r\n        </div>\r\n        <div className=\"weather-elements\">\r\n          <Card\r\n            attribute=\"Temperature\"\r\n            value={`${data.main.temp}ºC`}\r\n            idName=\"temperature\"\r\n          />\r\n          <Card\r\n            attribute=\"Feels like\"\r\n            value={`${data.main.feels_like}ºC`}\r\n            idName=\"feels-like\"\r\n          />\r\n          <Card\r\n            attribute=\"Humidity\"\r\n            value={`${data.main.humidity}%`}\r\n            idName=\"humidity\"\r\n          />\r\n          <Card\r\n            attribute=\"Description\"\r\n            value={`${data.weather[0].main}`}\r\n            idName=\"description\"\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h5>Loading Data...</h5>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Weather from \"./components/Weather\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Weather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}